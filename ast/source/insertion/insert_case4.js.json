{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "rotate_left",
            "range": [
              10,
              21
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 20
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "rotate_left",
            "range": [
              10,
              21
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 20
              }
            }
          },
          "range": [
            10,
            21
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 9
            },
            "end": {
              "line": 2,
              "column": 20
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "rotate_right",
            "range": [
              24,
              36
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 23
              },
              "end": {
                "line": 2,
                "column": 35
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "rotate_right",
            "range": [
              24,
              36
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 23
              },
              "end": {
                "line": 2,
                "column": 35
              }
            }
          },
          "range": [
            24,
            36
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 23
            },
            "end": {
              "line": 2,
              "column": 35
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "grandparent",
            "range": [
              39,
              50
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 38
              },
              "end": {
                "line": 2,
                "column": 49
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "grandparent",
            "range": [
              39,
              50
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 38
              },
              "end": {
                "line": 2,
                "column": 49
              }
            }
          },
          "range": [
            39,
            50
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 38
            },
            "end": {
              "line": 2,
              "column": 49
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "..",
        "raw": "'..'",
        "range": [
          58,
          62
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 57
          },
          "end": {
            "line": 2,
            "column": 61
          }
        }
      },
      "range": [
        1,
        64
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 63
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "insert_case5",
            "range": [
              74,
              86
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 21
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "insert_case5",
            "range": [
              74,
              86
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 21
              }
            }
          },
          "range": [
            74,
            86
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 9
            },
            "end": {
              "line": 3,
              "column": 21
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./insert_case5",
        "raw": "'./insert_case5'",
        "range": [
          94,
          110
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 29
          },
          "end": {
            "line": 3,
            "column": 45
          }
        }
      },
      "range": [
        65,
        112
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 47
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Preconditions:\n *   - n is red.\n *   - n is not the root of the tree.\n *   - n's parent is red.\n *   - n's uncle is black.\n *\n * Here we fix the input subtree to pass the preconditions of {@link insert_case5}.\n *\n * @param {Node} n - The input node.\n ",
          "range": [
            114,
            374
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "insert_case4",
          "range": [
            391,
            403
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 16
            },
            "end": {
              "line": 16,
              "column": 28
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "n",
            "range": [
              406,
              407
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 31
              },
              "end": {
                "line": 16,
                "column": 32
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "g",
                    "range": [
                      420,
                      421
                    ],
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 7
                      },
                      "end": {
                        "line": 18,
                        "column": 8
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "grandparent",
                      "range": [
                        424,
                        435
                      ],
                      "loc": {
                        "start": {
                          "line": 18,
                          "column": 11
                        },
                        "end": {
                          "line": 18,
                          "column": 22
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "n",
                        "range": [
                          437,
                          438
                        ],
                        "loc": {
                          "start": {
                            "line": 18,
                            "column": 24
                          },
                          "end": {
                            "line": 18,
                            "column": 25
                          }
                        }
                      }
                    ],
                    "range": [
                      424,
                      440
                    ],
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 11
                      },
                      "end": {
                        "line": 18,
                        "column": 27
                      }
                    }
                  },
                  "range": [
                    420,
                    440
                  ],
                  "loc": {
                    "start": {
                      "line": 18,
                      "column": 7
                    },
                    "end": {
                      "line": 18,
                      "column": 27
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                414,
                442
              ],
              "loc": {
                "start": {
                  "line": 18,
                  "column": 1
                },
                "end": {
                  "line": 18,
                  "column": 29
                }
              },
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n\t * If the path from g to n makes a left-right, change it to a left-left\n\t * with {@link rotate_left}. Then call {@link insert_case5} on the old\n\t * parent of n.\n\t *\n\t *             B                     B\n\t *           /   \\                 /   \\\n\t *         R       B             R       B\n\t *        / \\     / \\   -->     / \\     / \\\n\t *       =  >R   -   -        >R   =   -   -\n\t *          / \\               / \\\n\t *         =   =             =   =\n\t ",
                  "range": [
                    445,
                    907
                  ],
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 1
                    },
                    "end": {
                      "line": 32,
                      "column": 4
                    }
                  }
                }
              ]
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "LogicalExpression",
                "operator": "&&",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "n",
                    "range": [
                      917,
                      918
                    ],
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 8
                      },
                      "end": {
                        "line": 34,
                        "column": 9
                      }
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "n",
                        "range": [
                          923,
                          924
                        ],
                        "loc": {
                          "start": {
                            "line": 34,
                            "column": 14
                          },
                          "end": {
                            "line": 34,
                            "column": 15
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "parent",
                        "range": [
                          925,
                          931
                        ],
                        "loc": {
                          "start": {
                            "line": 34,
                            "column": 16
                          },
                          "end": {
                            "line": 34,
                            "column": 22
                          }
                        }
                      },
                      "range": [
                        923,
                        931
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 14
                        },
                        "end": {
                          "line": 34,
                          "column": 22
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "right",
                      "range": [
                        932,
                        937
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 23
                        },
                        "end": {
                          "line": 34,
                          "column": 28
                        }
                      }
                    },
                    "range": [
                      923,
                      937
                    ],
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 14
                      },
                      "end": {
                        "line": 34,
                        "column": 28
                      }
                    }
                  },
                  "range": [
                    917,
                    937
                  ],
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 8
                    },
                    "end": {
                      "line": 34,
                      "column": 28
                    }
                  }
                },
                "right": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "n",
                      "range": [
                        945,
                        946
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 36
                        },
                        "end": {
                          "line": 34,
                          "column": 37
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "parent",
                      "range": [
                        947,
                        953
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 38
                        },
                        "end": {
                          "line": 34,
                          "column": 44
                        }
                      }
                    },
                    "range": [
                      945,
                      953
                    ],
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 36
                      },
                      "end": {
                        "line": 34,
                        "column": 44
                      }
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "g",
                      "range": [
                        958,
                        959
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 49
                        },
                        "end": {
                          "line": 34,
                          "column": 50
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "left",
                      "range": [
                        960,
                        964
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 51
                        },
                        "end": {
                          "line": 34,
                          "column": 55
                        }
                      }
                    },
                    "range": [
                      958,
                      964
                    ],
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 49
                      },
                      "end": {
                        "line": 34,
                        "column": 55
                      }
                    }
                  },
                  "range": [
                    945,
                    964
                  ],
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 36
                    },
                    "end": {
                      "line": 34,
                      "column": 55
                    }
                  }
                },
                "range": [
                  915,
                  966
                ],
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 6
                  },
                  "end": {
                    "line": 34,
                    "column": 57
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "rotate_left",
                        "range": [
                          974,
                          985
                        ],
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 2
                          },
                          "end": {
                            "line": 36,
                            "column": 13
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n",
                            "range": [
                              987,
                              988
                            ],
                            "loc": {
                              "start": {
                                "line": 36,
                                "column": 15
                              },
                              "end": {
                                "line": 36,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parent",
                            "range": [
                              989,
                              995
                            ],
                            "loc": {
                              "start": {
                                "line": 36,
                                "column": 17
                              },
                              "end": {
                                "line": 36,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            987,
                            995
                          ],
                          "loc": {
                            "start": {
                              "line": 36,
                              "column": 15
                            },
                            "end": {
                              "line": 36,
                              "column": 23
                            }
                          }
                        }
                      ],
                      "range": [
                        974,
                        997
                      ],
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 2
                        },
                        "end": {
                          "line": 36,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      974,
                      999
                    ],
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 2
                      },
                      "end": {
                        "line": 36,
                        "column": 27
                      }
                    },
                    "trailingComments": [
                      {
                        "type": "Block",
                        "value": "*\n\t\t * rotate_left can be the below because of already having *g =  grandparent(n)\n\t\t *\n\t\t * saved_p=g.left, *saved_left_n=n.left;\n\t\t * g.left=n;\n\t\t * n.left=saved_p;\n\t\t * saved_p.right=saved_left_n;\n\t\t *\n\t\t * and modify the parent's nodes properly\n\t\t ",
                        "range": [
                          1003,
                          1259
                        ],
                        "loc": {
                          "start": {
                            "line": 38,
                            "column": 2
                          },
                          "end": {
                            "line": 47,
                            "column": 5
                          }
                        }
                      },
                      {
                        "type": "Line",
                        "value": " n = n.left; /!\\ need to fix rotate, so that we can safely reference a node",
                        "range": [
                          1263,
                          1340
                        ],
                        "loc": {
                          "start": {
                            "line": 49,
                            "column": 2
                          },
                          "end": {
                            "line": 49,
                            "column": 79
                          }
                        }
                      }
                    ]
                  }
                ],
                "range": [
                  969,
                  1344
                ],
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 60
                  },
                  "end": {
                    "line": 51,
                    "column": 2
                  }
                },
                "trailingComments": [
                  {
                    "type": "Block",
                    "value": "*\n\t * If the path from g to n makes a right-left, change it to a right-right\n\t * with {@link rotate_right}. Then call {@link insert_case5} on the old\n\t * parent of n.\n\t *\n\t *             B                     B\n\t *           /   \\                 /   \\\n\t *         B       R             B       R\n\t *        / \\     / \\   -->     / \\     / \\\n\t *       -   -  >R   =         -   -   =  >R\n\t *              / \\                       / \\\n\t *             =   =                     =   =\n\t ",
                    "range": [
                      1347,
                      1836
                    ],
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 1
                      },
                      "end": {
                        "line": 65,
                        "column": 4
                      }
                    }
                  }
                ]
              },
              "alternate": {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "n",
                      "range": [
                        1851,
                        1852
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 13
                        },
                        "end": {
                          "line": 67,
                          "column": 14
                        }
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "n",
                          "range": [
                            1857,
                            1858
                          ],
                          "loc": {
                            "start": {
                              "line": 67,
                              "column": 19
                            },
                            "end": {
                              "line": 67,
                              "column": 20
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "parent",
                          "range": [
                            1859,
                            1865
                          ],
                          "loc": {
                            "start": {
                              "line": 67,
                              "column": 21
                            },
                            "end": {
                              "line": 67,
                              "column": 27
                            }
                          }
                        },
                        "range": [
                          1857,
                          1865
                        ],
                        "loc": {
                          "start": {
                            "line": 67,
                            "column": 19
                          },
                          "end": {
                            "line": 67,
                            "column": 27
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "left",
                        "range": [
                          1866,
                          1870
                        ],
                        "loc": {
                          "start": {
                            "line": 67,
                            "column": 28
                          },
                          "end": {
                            "line": 67,
                            "column": 32
                          }
                        }
                      },
                      "range": [
                        1857,
                        1870
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 19
                        },
                        "end": {
                          "line": 67,
                          "column": 32
                        }
                      }
                    },
                    "range": [
                      1851,
                      1870
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 13
                      },
                      "end": {
                        "line": 67,
                        "column": 32
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "n",
                        "range": [
                          1878,
                          1879
                        ],
                        "loc": {
                          "start": {
                            "line": 67,
                            "column": 40
                          },
                          "end": {
                            "line": 67,
                            "column": 41
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "parent",
                        "range": [
                          1880,
                          1886
                        ],
                        "loc": {
                          "start": {
                            "line": 67,
                            "column": 42
                          },
                          "end": {
                            "line": 67,
                            "column": 48
                          }
                        }
                      },
                      "range": [
                        1878,
                        1886
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 40
                        },
                        "end": {
                          "line": 67,
                          "column": 48
                        }
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "g",
                        "range": [
                          1891,
                          1892
                        ],
                        "loc": {
                          "start": {
                            "line": 67,
                            "column": 53
                          },
                          "end": {
                            "line": 67,
                            "column": 54
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "right",
                        "range": [
                          1893,
                          1898
                        ],
                        "loc": {
                          "start": {
                            "line": 67,
                            "column": 55
                          },
                          "end": {
                            "line": 67,
                            "column": 60
                          }
                        }
                      },
                      "range": [
                        1891,
                        1898
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 53
                        },
                        "end": {
                          "line": 67,
                          "column": 60
                        }
                      }
                    },
                    "range": [
                      1878,
                      1898
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 40
                      },
                      "end": {
                        "line": 67,
                        "column": 60
                      }
                    }
                  },
                  "range": [
                    1849,
                    1900
                  ],
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 11
                    },
                    "end": {
                      "line": 67,
                      "column": 62
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "rotate_right",
                          "range": [
                            1908,
                            1920
                          ],
                          "loc": {
                            "start": {
                              "line": 69,
                              "column": 2
                            },
                            "end": {
                              "line": 69,
                              "column": 14
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "n",
                              "range": [
                                1922,
                                1923
                              ],
                              "loc": {
                                "start": {
                                  "line": 69,
                                  "column": 16
                                },
                                "end": {
                                  "line": 69,
                                  "column": 17
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parent",
                              "range": [
                                1924,
                                1930
                              ],
                              "loc": {
                                "start": {
                                  "line": 69,
                                  "column": 18
                                },
                                "end": {
                                  "line": 69,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1922,
                              1930
                            ],
                            "loc": {
                              "start": {
                                "line": 69,
                                "column": 16
                              },
                              "end": {
                                "line": 69,
                                "column": 24
                              }
                            }
                          }
                        ],
                        "range": [
                          1908,
                          1932
                        ],
                        "loc": {
                          "start": {
                            "line": 69,
                            "column": 2
                          },
                          "end": {
                            "line": 69,
                            "column": 26
                          }
                        }
                      },
                      "range": [
                        1908,
                        1934
                      ],
                      "loc": {
                        "start": {
                          "line": 69,
                          "column": 2
                        },
                        "end": {
                          "line": 69,
                          "column": 28
                        }
                      },
                      "trailingComments": [
                        {
                          "type": "Block",
                          "value": "*\n\t\t * rotate_right can be the below to take advantage of already having *g =  grandparent(n)\n\t\t *\n\t\t * saved_p=g.right, *saved_right_n=n.right;\n\t\t * g.right=n;\n\t\t * n.right=saved_p;\n\t\t * saved_p.left=saved_right_n;\n\t\t *\n\t\t ",
                          "range": [
                            1938,
                            2166
                          ],
                          "loc": {
                            "start": {
                              "line": 71,
                              "column": 2
                            },
                            "end": {
                              "line": 79,
                              "column": 5
                            }
                          }
                        },
                        {
                          "type": "Line",
                          "value": " n = n.right ;",
                          "range": [
                            2170,
                            2186
                          ],
                          "loc": {
                            "start": {
                              "line": 81,
                              "column": 2
                            },
                            "end": {
                              "line": 81,
                              "column": 18
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "range": [
                    1903,
                    2189
                  ],
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 65
                    },
                    "end": {
                      "line": 82,
                      "column": 2
                    }
                  }
                },
                "alternate": null,
                "range": [
                  1844,
                  2189
                ],
                "loc": {
                  "start": {
                    "line": 67,
                    "column": 6
                  },
                  "end": {
                    "line": 82,
                    "column": 2
                  }
                },
                "leadingComments": [
                  {
                    "type": "Block",
                    "value": "*\n\t\t * rotate_left can be the below because of already having *g =  grandparent(n)\n\t\t *\n\t\t * saved_p=g.left, *saved_left_n=n.left;\n\t\t * g.left=n;\n\t\t * n.left=saved_p;\n\t\t * saved_p.right=saved_left_n;\n\t\t *\n\t\t * and modify the parent's nodes properly\n\t\t ",
                    "range": [
                      1003,
                      1259
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 2
                      },
                      "end": {
                        "line": 47,
                        "column": 5
                      }
                    }
                  },
                  {
                    "type": "Line",
                    "value": " n = n.left; /!\\ need to fix rotate, so that we can safely reference a node",
                    "range": [
                      1263,
                      1340
                    ],
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 2
                      },
                      "end": {
                        "line": 49,
                        "column": 79
                      }
                    }
                  },
                  {
                    "type": "Block",
                    "value": "*\n\t * If the path from g to n makes a right-left, change it to a right-right\n\t * with {@link rotate_right}. Then call {@link insert_case5} on the old\n\t * parent of n.\n\t *\n\t *             B                     B\n\t *           /   \\                 /   \\\n\t *         B       R             B       R\n\t *        / \\     / \\   -->     / \\     / \\\n\t *       -   -  >R   =         -   -   =  >R\n\t *              / \\                       / \\\n\t *             =   =                     =   =\n\t ",
                    "range": [
                      1347,
                      1836
                    ],
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 1
                      },
                      "end": {
                        "line": 65,
                        "column": 4
                      }
                    }
                  }
                ]
              },
              "range": [
                910,
                2189
              ],
              "loc": {
                "start": {
                  "line": 34,
                  "column": 1
                },
                "end": {
                  "line": 82,
                  "column": 2
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n\t * If the path from g to n makes a left-right, change it to a left-left\n\t * with {@link rotate_left}. Then call {@link insert_case5} on the old\n\t * parent of n.\n\t *\n\t *             B                     B\n\t *           /   \\                 /   \\\n\t *         R       B             R       B\n\t *        / \\     / \\   -->     / \\     / \\\n\t *       =  >R   -   -        >R   =   -   -\n\t *          / \\               / \\\n\t *         =   =             =   =\n\t ",
                  "range": [
                    445,
                    907
                  ],
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 1
                    },
                    "end": {
                      "line": 32,
                      "column": 4
                    }
                  }
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "insert_case5",
                  "range": [
                    2192,
                    2204
                  ],
                  "loc": {
                    "start": {
                      "line": 84,
                      "column": 1
                    },
                    "end": {
                      "line": 84,
                      "column": 13
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "n",
                    "range": [
                      2206,
                      2207
                    ],
                    "loc": {
                      "start": {
                        "line": 84,
                        "column": 15
                      },
                      "end": {
                        "line": 84,
                        "column": 16
                      }
                    }
                  }
                ],
                "range": [
                  2192,
                  2209
                ],
                "loc": {
                  "start": {
                    "line": 84,
                    "column": 1
                  },
                  "end": {
                    "line": 84,
                    "column": 18
                  }
                }
              },
              "range": [
                2192,
                2211
              ],
              "loc": {
                "start": {
                  "line": 84,
                  "column": 1
                },
                "end": {
                  "line": 84,
                  "column": 20
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n\t\t * rotate_right can be the below to take advantage of already having *g =  grandparent(n)\n\t\t *\n\t\t * saved_p=g.right, *saved_right_n=n.right;\n\t\t * g.right=n;\n\t\t * n.right=saved_p;\n\t\t * saved_p.left=saved_right_n;\n\t\t *\n\t\t ",
                  "range": [
                    1938,
                    2166
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 2
                    },
                    "end": {
                      "line": 79,
                      "column": 5
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " n = n.right ;",
                  "range": [
                    2170,
                    2186
                  ],
                  "loc": {
                    "start": {
                      "line": 81,
                      "column": 2
                    },
                    "end": {
                      "line": 81,
                      "column": 18
                    }
                  }
                }
              ]
            }
          ],
          "range": [
            410,
            2214
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 35
            },
            "end": {
              "line": 86,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          382,
          2214
        ],
        "loc": {
          "start": {
            "line": 16,
            "column": 7
          },
          "end": {
            "line": 86,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Preconditions:\n *   - n is red.\n *   - n is not the root of the tree.\n *   - n's parent is red.\n *   - n's uncle is black.\n *\n * Here we fix the input subtree to pass the preconditions of {@link insert_case5}.\n *\n * @param {Node} n - The input node.\n ",
            "range": [
              114,
              374
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 15,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        375,
        2214
      ],
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 86,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Preconditions:\n *   - n is red.\n *   - n is not the root of the tree.\n *   - n's parent is red.\n *   - n's uncle is black.\n *\n * Here we fix the input subtree to pass the preconditions of {@link insert_case5}.\n *\n * @param {Node} n - The input node.\n ",
          "range": [
            114,
            374
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    1,
    2214
  ],
  "loc": {
    "start": {
      "line": 2,
      "column": 0
    },
    "end": {
      "line": 86,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Preconditions:\n *   - n is red.\n *   - n is not the root of the tree.\n *   - n's parent is red.\n *   - n's uncle is black.\n *\n * Here we fix the input subtree to pass the preconditions of {@link insert_case5}.\n *\n * @param {Node} n - The input node.\n ",
      "range": [
        114,
        374
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n\t * If the path from g to n makes a left-right, change it to a left-left\n\t * with {@link rotate_left}. Then call {@link insert_case5} on the old\n\t * parent of n.\n\t *\n\t *             B                     B\n\t *           /   \\                 /   \\\n\t *         R       B             R       B\n\t *        / \\     / \\   -->     / \\     / \\\n\t *       =  >R   -   -        >R   =   -   -\n\t *          / \\               / \\\n\t *         =   =             =   =\n\t ",
      "range": [
        445,
        907
      ],
      "loc": {
        "start": {
          "line": 20,
          "column": 1
        },
        "end": {
          "line": 32,
          "column": 4
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n\t\t * rotate_left can be the below because of already having *g =  grandparent(n)\n\t\t *\n\t\t * saved_p=g.left, *saved_left_n=n.left;\n\t\t * g.left=n;\n\t\t * n.left=saved_p;\n\t\t * saved_p.right=saved_left_n;\n\t\t *\n\t\t * and modify the parent's nodes properly\n\t\t ",
      "range": [
        1003,
        1259
      ],
      "loc": {
        "start": {
          "line": 38,
          "column": 2
        },
        "end": {
          "line": 47,
          "column": 5
        }
      }
    },
    {
      "type": "Line",
      "value": " n = n.left; /!\\ need to fix rotate, so that we can safely reference a node",
      "range": [
        1263,
        1340
      ],
      "loc": {
        "start": {
          "line": 49,
          "column": 2
        },
        "end": {
          "line": 49,
          "column": 79
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n\t * If the path from g to n makes a right-left, change it to a right-right\n\t * with {@link rotate_right}. Then call {@link insert_case5} on the old\n\t * parent of n.\n\t *\n\t *             B                     B\n\t *           /   \\                 /   \\\n\t *         B       R             B       R\n\t *        / \\     / \\   -->     / \\     / \\\n\t *       -   -  >R   =         -   -   =  >R\n\t *              / \\                       / \\\n\t *             =   =                     =   =\n\t ",
      "range": [
        1347,
        1836
      ],
      "loc": {
        "start": {
          "line": 53,
          "column": 1
        },
        "end": {
          "line": 65,
          "column": 4
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n\t\t * rotate_right can be the below to take advantage of already having *g =  grandparent(n)\n\t\t *\n\t\t * saved_p=g.right, *saved_right_n=n.right;\n\t\t * g.right=n;\n\t\t * n.right=saved_p;\n\t\t * saved_p.left=saved_right_n;\n\t\t *\n\t\t ",
      "range": [
        1938,
        2166
      ],
      "loc": {
        "start": {
          "line": 71,
          "column": 2
        },
        "end": {
          "line": 79,
          "column": 5
        }
      }
    },
    {
      "type": "Line",
      "value": " n = n.right ;",
      "range": [
        2170,
        2186
      ],
      "loc": {
        "start": {
          "line": 81,
          "column": 2
        },
        "end": {
          "line": 81,
          "column": 18
        }
      }
    }
  ]
}